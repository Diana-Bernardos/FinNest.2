{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\n\n// Configuración base de axios\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Servicios de Ahorros\nexport const savingsService = {\n  create: async savingData => {\n    try {\n      console.log('Sending data to server:', savingData);\n      const response = await api.post('/savings', {\n        goalName: savingData.goalName,\n        targetAmount: parseFloat(savingData.targetAmount),\n        currentAmount: parseFloat(savingData.currentAmount || 0),\n        targetDate: new Date(savingData.targetDate).toISOString()\n      });\n      console.log('Server response:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Detailed create error:', {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n      });\n      throw error;\n    }\n  },\n  getAll: async () => {\n    try {\n      const response = await api.get('/savings');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo ahorros:', error);\n      throw error;\n    }\n  },\n  // Actualizar ahorro\n  update: async (id, updateData) => {\n    try {\n      // Transform update data to match backend expectations\n      const transformedData = {\n        goalName: updateData.goalName,\n        targetAmount: updateData.targetAmount,\n        currentAmount: updateData.currentAmount,\n        targetDate: updateData.targetDate\n      };\n      const response = await api.put(`/savings/${id}`, transformedData);\n      return response.data;\n    } catch (error) {\n      console.error('Error actualizando ahorro:', error);\n      throw error;\n    }\n  },\n  // Eliminar ahorro\n  delete: async id => {\n    try {\n      const response = await api.delete(`/savings/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error eliminando ahorro:', error);\n      throw error;\n    }\n  }\n};\n\n// Servicios de Gastos\nexport const expensesService = {\n  // Obtener todos los gastos\n  create: async expenseData => {\n    try {\n      const response = await api.post('/expenses', expenseData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creando gasto:', error);\n      throw error;\n    }\n  },\n  getAll: async () => {\n    try {\n      const response = await api.get('/expenses');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo gastos:', error);\n      throw error;\n    }\n  },\n  // Actualizar gasto\n  update: async (id, updateData) => {\n    try {\n      const response = await api.put(`/expenses/${id}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Error actualizando gasto:', error);\n      throw error;\n    }\n  },\n  // Eliminar gasto\n  delete: async id => {\n    try {\n      const response = await api.delete(`/expenses/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error eliminando gasto:', error);\n      throw error;\n    }\n  }\n};\n\n// Servicios de Análisis\nexport const analysisService = {\n  // Obtener resumen mensual\n  getMonthlySummary: async () => {\n    try {\n      const response = await api.get('/analysis/monthly-summary');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo resumen mensual:', error);\n      throw error;\n    }\n  },\n  // Obtener análisis por categoría\n  getCategoryBreakdown: async () => {\n    try {\n      const response = await api.get('/expenses/analysis/by-category');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo análisis por categoría:', error);\n      throw error;\n    }\n  }\n};\n\n// Utilidades\nexport const utilService = {\n  // Formateo de moneda\n  formatCurrency: amount => {\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: 'CLP'\n    }).format(amount);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","savingsService","savingData","console","log","response","post","goalName","targetAmount","parseFloat","currentAmount","targetDate","Date","toISOString","data","error","_error$response","_error$response2","message","status","getAll","get","update","id","updateData","transformedData","put","delete","expensesService","expenseData","analysisService","getMonthlySummary","getCategoryBreakdown","utilService","formatCurrency","amount","Intl","NumberFormat","style","currency","format"],"sources":["/Users/diana/Desktop/FinNest.2/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\n\n// Configuración base de axios\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Servicios de Ahorros\nexport const savingsService = {\n  create: async (savingData) => {\n    try {\n      console.log('Sending data to server:', savingData);\n      \n      const response = await api.post('/savings', {\n        goalName: savingData.goalName,\n        targetAmount: parseFloat(savingData.targetAmount),\n        currentAmount: parseFloat(savingData.currentAmount || 0),\n        targetDate: new Date(savingData.targetDate).toISOString()\n      });\n\n      console.log('Server response:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Detailed create error:', {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status\n      });\n      throw error;\n    }\n  },\n  getAll: async () => {\n    try {\n      const response = await api.get('/savings');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo ahorros:', error);\n      throw error;\n    }\n  },\n\n  // Actualizar ahorro\n  update: async (id, updateData) => {\n    try {\n      // Transform update data to match backend expectations\n      const transformedData = {\n        goalName: updateData.goalName,\n        targetAmount: updateData.targetAmount,\n        currentAmount: updateData.currentAmount,\n        targetDate: updateData.targetDate\n      };\n\n      const response = await api.put(`/savings/${id}`, transformedData);\n      return response.data;\n    } catch (error) {\n      console.error('Error actualizando ahorro:', error);\n      throw error;\n    }\n  },\n\n  // Eliminar ahorro\n  delete: async (id) => {\n    try {\n      const response = await api.delete(`/savings/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error eliminando ahorro:', error);\n      throw error;\n    }\n  }\n};\n\n// Servicios de Gastos\nexport const expensesService = {\n  // Obtener todos los gastos\n  create: async (expenseData) => {\n    try {\n      const response = await api.post('/expenses', expenseData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creando gasto:', error);\n      throw error;\n    }\n  },\n  getAll: async () => {\n    try {\n      const response = await api.get('/expenses');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo gastos:', error);\n      throw error;\n    }\n  },\n\n  // Actualizar gasto\n  update: async (id, updateData) => {\n    try {\n      const response = await api.put(`/expenses/${id}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Error actualizando gasto:', error);\n      throw error;\n    }\n  },\n\n  // Eliminar gasto\n  delete: async (id) => {\n    try {\n      const response = await api.delete(`/expenses/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error eliminando gasto:', error);\n      throw error;\n    }\n  }\n};\n\n// Servicios de Análisis\nexport const analysisService = {\n  // Obtener resumen mensual\n  getMonthlySummary: async () => {\n    try {\n      const response = await api.get('/analysis/monthly-summary');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo resumen mensual:', error);\n      throw error;\n    }\n  },\n\n  // Obtener análisis por categoría\n  getCategoryBreakdown: async () => {\n    try {\n      const response = await api.get('/expenses/analysis/by-category');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo análisis por categoría:', error);\n      throw error;\n    }\n  }\n};\n\n// Utilidades\nexport const utilService = {\n  // Formateo de moneda\n  formatCurrency: (amount) => {\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: 'CLP'\n    }).format(amount);\n  }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}