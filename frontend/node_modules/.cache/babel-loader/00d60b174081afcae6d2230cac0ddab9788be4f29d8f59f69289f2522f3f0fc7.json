{"ast":null,"code":"// Validación para números\nexport const isNumeric = (value, min = 0) => {\n  const number = parseFloat(value);\n  return !isNaN(number) && number >= min;\n};\n\n// Validación para fechas\nexport const isDate = dateString => {\n  const date = new Date(dateString);\n  return date instanceof Date && !isNaN(date);\n};\n\n// Categorías válidas para gastos\nexport const VALID_CATEGORIES = ['alimentación', 'transporte', 'vivienda', 'servicios', 'educación', 'entretenimiento', 'salud', 'otros'];","map":{"version":3,"names":["isNumeric","value","min","number","parseFloat","isNaN","isDate","dateString","date","Date","VALID_CATEGORIES"],"sources":["/Users/diana/Desktop/FinNest.2/frontend/src/utils/validation.js"],"sourcesContent":["// Validación para números\nexport const isNumeric = (value, min = 0) => {\n    const number = parseFloat(value);\n    return !isNaN(number) && number >= min;\n  };\n  \n  // Validación para fechas\n  export const isDate = (dateString) => {\n    const date = new Date(dateString);\n    return date instanceof Date && !isNaN(date);\n  };\n  \n  // Categorías válidas para gastos\n  export const VALID_CATEGORIES = [\n    'alimentación',\n    'transporte',\n    'vivienda',\n    'servicios',\n    'educación',\n    'entretenimiento',\n    'salud',\n    'otros',\n  ];"],"mappings":"AAAA;AACA,OAAO,MAAMA,SAAS,GAAGA,CAACC,KAAK,EAAEC,GAAG,GAAG,CAAC,KAAK;EACzC,MAAMC,MAAM,GAAGC,UAAU,CAACH,KAAK,CAAC;EAChC,OAAO,CAACI,KAAK,CAACF,MAAM,CAAC,IAAIA,MAAM,IAAID,GAAG;AACxC,CAAC;;AAED;AACA,OAAO,MAAMI,MAAM,GAAIC,UAAU,IAAK;EACpC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,OAAOC,IAAI,YAAYC,IAAI,IAAI,CAACJ,KAAK,CAACG,IAAI,CAAC;AAC7C,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAG,CAC9B,cAAc,EACd,YAAY,EACZ,UAAU,EACV,WAAW,EACX,WAAW,EACX,iBAAiB,EACjB,OAAO,EACP,OAAO,CACR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}