{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nimport { saveToLocalStorage, getFromLocalStorage, clearLocalStorage } from '../utils/localStorageUtils';\n\n// Configuración base de axios\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para manejar errores de red\napi.interceptors.response.use(response => response, async error => {\n  if (!error.response) {\n    // Error de red o servidor no disponible\n    if (error.config.method === 'post') {\n      const pendingData = {\n        url: error.config.url,\n        method: error.config.method,\n        data: JSON.parse(error.config.data),\n        timestamp: Date.now()\n      };\n\n      // Guardar en localStorage según el tipo de datos\n      if (error.config.url.includes('expenses')) {\n        const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n        pendingExpenses.push(pendingData);\n        saveToLocalStorage('pendingExpenses', pendingExpenses);\n      } else if (error.config.url.includes('savings')) {\n        const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n        pendingSavings.push(pendingData);\n        saveToLocalStorage('pendingSavings', pendingSavings);\n      }\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Servicios de Ahorros\nexport const savingsService = {\n  create: async savingData => {\n    try {\n      const response = await api.post('/savings', savingData);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n        pendingSavings.push({\n          ...savingData,\n          id: Date.now(),\n          pending: true\n        });\n        saveToLocalStorage('pendingSavings', pendingSavings);\n        return savingData;\n      }\n      console.error('Error creando ahorro:', error);\n      throw error;\n    }\n  },\n  getAll: async () => {\n    try {\n      const response = await api.get('/savings');\n      const onlineData = response.data;\n      if (!navigator.onLine) {\n        const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n        return [...onlineData, ...pendingSavings];\n      }\n      return onlineData;\n    } catch (error) {\n      if (!navigator.onLine) {\n        return getFromLocalStorage('pendingSavings') || [];\n      }\n      console.error('Error obteniendo ahorros:', error);\n      throw error;\n    }\n  },\n  update: async (id, updateData) => {\n    try {\n      const response = await api.put(`/savings/${id}`, updateData);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n        const updatedSavings = pendingSavings.map(saving => saving.id === id ? {\n          ...saving,\n          ...updateData,\n          pending: true\n        } : saving);\n        saveToLocalStorage('pendingSavings', updatedSavings);\n        return updateData;\n      }\n      console.error('Error actualizando ahorro:', error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await api.delete(`/savings/${id}`);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n        const updatedSavings = pendingSavings.filter(saving => saving.id !== id);\n        saveToLocalStorage('pendingSavings', updatedSavings);\n        return {\n          success: true,\n          offline: true\n        };\n      }\n      console.error('Error eliminando ahorro:', error);\n      throw error;\n    }\n  },\n  syncPendingSavings: async () => {\n    if (navigator.onLine) {\n      const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n      for (const saving of pendingSavings) {\n        try {\n          if (saving.pending) {\n            await savingsService.create(saving);\n          }\n        } catch (error) {\n          console.error('Error sincronizando ahorro:', error);\n        }\n      }\n      clearLocalStorage('pendingSavings');\n    }\n  }\n};\n\n// Servicios de Gastos\nexport const expensesService = {\n  create: async expenseData => {\n    try {\n      const response = await api.post('/expenses', expenseData);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n        pendingExpenses.push({\n          ...expenseData,\n          id: Date.now(),\n          pending: true\n        });\n        saveToLocalStorage('pendingExpenses', pendingExpenses);\n        return expenseData;\n      }\n      console.error('Error creando gasto:', error);\n      throw error;\n    }\n  },\n  getAll: async () => {\n    try {\n      const response = await api.get('/expenses');\n      const onlineData = response.data;\n      if (!navigator.onLine) {\n        const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n        return [...onlineData, ...pendingExpenses];\n      }\n      return onlineData;\n    } catch (error) {\n      if (!navigator.onLine) {\n        return getFromLocalStorage('pendingExpenses') || [];\n      }\n      console.error('Error obteniendo gastos:', error);\n      throw error;\n    }\n  },\n  update: async (id, updateData) => {\n    try {\n      const response = await api.put(`/expenses/${id}`, updateData);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n        const updatedExpenses = pendingExpenses.map(expense => expense.id === id ? {\n          ...expense,\n          ...updateData,\n          pending: true\n        } : expense);\n        saveToLocalStorage('pendingExpenses', updatedExpenses);\n        return updateData;\n      }\n      console.error('Error actualizando gasto:', error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await api.delete(`/expenses/${id}`);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n        const updatedExpenses = pendingExpenses.filter(expense => expense.id !== id);\n        saveToLocalStorage('pendingExpenses', updatedExpenses);\n        return {\n          success: true,\n          offline: true\n        };\n      }\n      console.error('Error eliminando gasto:', error);\n      throw error;\n    }\n  },\n  syncPendingExpenses: async () => {\n    if (navigator.onLine) {\n      const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n      for (const expense of pendingExpenses) {\n        try {\n          if (expense.pending) {\n            await expensesService.create(expense);\n          }\n        } catch (error) {\n          console.error('Error sincronizando gasto:', error);\n        }\n      }\n      clearLocalStorage('pendingExpenses');\n    }\n  }\n};\n\n// Servicios de Análisis\nexport const analysisService = {\n  getMonthlySummary: async () => {\n    try {\n      const response = await api.get('/analysis/monthly-summary');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo resumen mensual:', error);\n      throw error;\n    }\n  },\n  getCategoryBreakdown: async () => {\n    try {\n      const response = await api.get('/expenses/analysis/by-category');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo análisis por categoría:', error);\n      throw error;\n    }\n  }\n};\n\n// Utilidades\nexport const utilService = {\n  formatCurrency: amount => {\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: 'CLP'\n    }).format(amount);\n  },\n  isOnline: () => navigator.onLine,\n  syncAll: async () => {\n    await Promise.all([expensesService.syncPendingExpenses(), savingsService.syncPendingSavings()]);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","saveToLocalStorage","getFromLocalStorage","clearLocalStorage","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","response","use","error","config","method","pendingData","url","data","JSON","parse","timestamp","Date","now","includes","pendingExpenses","push","pendingSavings","Promise","reject","savingsService","savingData","post","navigator","onLine","id","pending","console","getAll","get","onlineData","update","updateData","put","updatedSavings","map","saving","delete","filter","success","offline","syncPendingSavings","expensesService","expenseData","updatedExpenses","expense","syncPendingExpenses","analysisService","getMonthlySummary","getCategoryBreakdown","utilService","formatCurrency","amount","Intl","NumberFormat","style","currency","format","isOnline","syncAll","all"],"sources":["/Users/diana/Desktop/FinNest.2/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\nimport { saveToLocalStorage, getFromLocalStorage, clearLocalStorage } from '../utils/localStorageUtils';\n\n// Configuración base de axios\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para manejar errores de red\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    if (!error.response) {\n      // Error de red o servidor no disponible\n      if (error.config.method === 'post') {\n        const pendingData = {\n          url: error.config.url,\n          method: error.config.method,\n          data: JSON.parse(error.config.data),\n          timestamp: Date.now()\n        };\n\n        // Guardar en localStorage según el tipo de datos\n        if (error.config.url.includes('expenses')) {\n          const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n          pendingExpenses.push(pendingData);\n          saveToLocalStorage('pendingExpenses', pendingExpenses);\n        } else if (error.config.url.includes('savings')) {\n          const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n          pendingSavings.push(pendingData);\n          saveToLocalStorage('pendingSavings', pendingSavings);\n        }\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Servicios de Ahorros\nexport const savingsService = {\n  create: async (savingData) => {\n    try {\n      const response = await api.post('/savings', savingData);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n        pendingSavings.push({ ...savingData, id: Date.now(), pending: true });\n        saveToLocalStorage('pendingSavings', pendingSavings);\n        return savingData;\n      }\n      console.error('Error creando ahorro:', error);\n      throw error;\n    }\n  },\n\n  getAll: async () => {\n    try {\n      const response = await api.get('/savings');\n      const onlineData = response.data;\n      \n      if (!navigator.onLine) {\n        const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n        return [...onlineData, ...pendingSavings];\n      }\n      \n      return onlineData;\n    } catch (error) {\n      if (!navigator.onLine) {\n        return getFromLocalStorage('pendingSavings') || [];\n      }\n      console.error('Error obteniendo ahorros:', error);\n      throw error;\n    }\n  },\n\n  update: async (id, updateData) => {\n    try {\n      const response = await api.put(`/savings/${id}`, updateData);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n        const updatedSavings = pendingSavings.map(saving => \n          saving.id === id ? { ...saving, ...updateData, pending: true } : saving\n        );\n        saveToLocalStorage('pendingSavings', updatedSavings);\n        return updateData;\n      }\n      console.error('Error actualizando ahorro:', error);\n      throw error;\n    }\n  },\n\n  delete: async (id) => {\n    try {\n      const response = await api.delete(`/savings/${id}`);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n        const updatedSavings = pendingSavings.filter(saving => saving.id !== id);\n        saveToLocalStorage('pendingSavings', updatedSavings);\n        return { success: true, offline: true };\n      }\n      console.error('Error eliminando ahorro:', error);\n      throw error;\n    }\n  },\n\n  syncPendingSavings: async () => {\n    if (navigator.onLine) {\n      const pendingSavings = getFromLocalStorage('pendingSavings') || [];\n      \n      for (const saving of pendingSavings) {\n        try {\n          if (saving.pending) {\n            await savingsService.create(saving);\n          }\n        } catch (error) {\n          console.error('Error sincronizando ahorro:', error);\n        }\n      }\n      \n      clearLocalStorage('pendingSavings');\n    }\n  }\n};\n\n// Servicios de Gastos\nexport const expensesService = {\n  create: async (expenseData) => {\n    try {\n      const response = await api.post('/expenses', expenseData);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n        pendingExpenses.push({ ...expenseData, id: Date.now(), pending: true });\n        saveToLocalStorage('pendingExpenses', pendingExpenses);\n        return expenseData;\n      }\n      console.error('Error creando gasto:', error);\n      throw error;\n    }\n  },\n\n  getAll: async () => {\n    try {\n      const response = await api.get('/expenses');\n      const onlineData = response.data;\n      \n      if (!navigator.onLine) {\n        const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n        return [...onlineData, ...pendingExpenses];\n      }\n      \n      return onlineData;\n    } catch (error) {\n      if (!navigator.onLine) {\n        return getFromLocalStorage('pendingExpenses') || [];\n      }\n      console.error('Error obteniendo gastos:', error);\n      throw error;\n    }\n  },\n\n  update: async (id, updateData) => {\n    try {\n      const response = await api.put(`/expenses/${id}`, updateData);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n        const updatedExpenses = pendingExpenses.map(expense => \n          expense.id === id ? { ...expense, ...updateData, pending: true } : expense\n        );\n        saveToLocalStorage('pendingExpenses', updatedExpenses);\n        return updateData;\n      }\n      console.error('Error actualizando gasto:', error);\n      throw error;\n    }\n  },\n\n  delete: async (id) => {\n    try {\n      const response = await api.delete(`/expenses/${id}`);\n      return response.data;\n    } catch (error) {\n      if (!navigator.onLine) {\n        const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n        const updatedExpenses = pendingExpenses.filter(expense => expense.id !== id);\n        saveToLocalStorage('pendingExpenses', updatedExpenses);\n        return { success: true, offline: true };\n      }\n      console.error('Error eliminando gasto:', error);\n      throw error;\n    }\n  },\n\n  syncPendingExpenses: async () => {\n    if (navigator.onLine) {\n      const pendingExpenses = getFromLocalStorage('pendingExpenses') || [];\n      \n      for (const expense of pendingExpenses) {\n        try {\n          if (expense.pending) {\n            await expensesService.create(expense);\n          }\n        } catch (error) {\n          console.error('Error sincronizando gasto:', error);\n        }\n      }\n      \n      clearLocalStorage('pendingExpenses');\n    }\n  }\n};\n\n// Servicios de Análisis\nexport const analysisService = {\n  getMonthlySummary: async () => {\n    try {\n      const response = await api.get('/analysis/monthly-summary');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo resumen mensual:', error);\n      throw error;\n    }\n  },\n\n  getCategoryBreakdown: async () => {\n    try {\n      const response = await api.get('/expenses/analysis/by-category');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo análisis por categoría:', error);\n      throw error;\n    }\n  }\n};\n\n// Utilidades\nexport const utilService = {\n  formatCurrency: (amount) => {\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: 'CLP'\n    }).format(amount);\n  },\n\n  isOnline: () => navigator.onLine,\n\n  syncAll: async () => {\n    await Promise.all([\n      expensesService.syncPendingExpenses(),\n      savingsService.syncPendingSavings()\n    ]);\n  }\n};\n\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,EAAEC,mBAAmB,EAAEC,iBAAiB,QAAQ,4BAA4B;;AAEvG;AACA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EACf,IAAI,CAACA,KAAK,CAACF,QAAQ,EAAE;IACnB;IACA,IAAIE,KAAK,CAACC,MAAM,CAACC,MAAM,KAAK,MAAM,EAAE;MAClC,MAAMC,WAAW,GAAG;QAClBC,GAAG,EAAEJ,KAAK,CAACC,MAAM,CAACG,GAAG;QACrBF,MAAM,EAAEF,KAAK,CAACC,MAAM,CAACC,MAAM;QAC3BG,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACP,KAAK,CAACC,MAAM,CAACI,IAAI,CAAC;QACnCG,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;MACtB,CAAC;;MAED;MACA,IAAIV,KAAK,CAACC,MAAM,CAACG,GAAG,CAACO,QAAQ,CAAC,UAAU,CAAC,EAAE;QACzC,MAAMC,eAAe,GAAGzB,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,EAAE;QACpEyB,eAAe,CAACC,IAAI,CAACV,WAAW,CAAC;QACjCjB,kBAAkB,CAAC,iBAAiB,EAAE0B,eAAe,CAAC;MACxD,CAAC,MAAM,IAAIZ,KAAK,CAACC,MAAM,CAACG,GAAG,CAACO,QAAQ,CAAC,SAAS,CAAC,EAAE;QAC/C,MAAMG,cAAc,GAAG3B,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,EAAE;QAClE2B,cAAc,CAACD,IAAI,CAACV,WAAW,CAAC;QAChCjB,kBAAkB,CAAC,gBAAgB,EAAE4B,cAAc,CAAC;MACtD;IACF;EACF;EACA,OAAOC,OAAO,CAACC,MAAM,CAAChB,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMiB,cAAc,GAAG;EAC5B3B,MAAM,EAAE,MAAO4B,UAAU,IAAK;IAC5B,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMT,GAAG,CAAC8B,IAAI,CAAC,UAAU,EAAED,UAAU,CAAC;MACvD,OAAOpB,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACoB,SAAS,CAACC,MAAM,EAAE;QACrB,MAAMP,cAAc,GAAG3B,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,EAAE;QAClE2B,cAAc,CAACD,IAAI,CAAC;UAAE,GAAGK,UAAU;UAAEI,EAAE,EAAEb,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEa,OAAO,EAAE;QAAK,CAAC,CAAC;QACrErC,kBAAkB,CAAC,gBAAgB,EAAE4B,cAAc,CAAC;QACpD,OAAOI,UAAU;MACnB;MACAM,OAAO,CAACxB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDyB,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACF,MAAM3B,QAAQ,GAAG,MAAMT,GAAG,CAACqC,GAAG,CAAC,UAAU,CAAC;MAC1C,MAAMC,UAAU,GAAG7B,QAAQ,CAACO,IAAI;MAEhC,IAAI,CAACe,SAAS,CAACC,MAAM,EAAE;QACrB,MAAMP,cAAc,GAAG3B,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,EAAE;QAClE,OAAO,CAAC,GAAGwC,UAAU,EAAE,GAAGb,cAAc,CAAC;MAC3C;MAEA,OAAOa,UAAU;IACnB,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACd,IAAI,CAACoB,SAAS,CAACC,MAAM,EAAE;QACrB,OAAOlC,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,EAAE;MACpD;MACAqC,OAAO,CAACxB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAED4B,MAAM,EAAE,MAAAA,CAAON,EAAE,EAAEO,UAAU,KAAK;IAChC,IAAI;MACF,MAAM/B,QAAQ,GAAG,MAAMT,GAAG,CAACyC,GAAG,CAAC,YAAYR,EAAE,EAAE,EAAEO,UAAU,CAAC;MAC5D,OAAO/B,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACoB,SAAS,CAACC,MAAM,EAAE;QACrB,MAAMP,cAAc,GAAG3B,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,EAAE;QAClE,MAAM4C,cAAc,GAAGjB,cAAc,CAACkB,GAAG,CAACC,MAAM,IAC9CA,MAAM,CAACX,EAAE,KAAKA,EAAE,GAAG;UAAE,GAAGW,MAAM;UAAE,GAAGJ,UAAU;UAAEN,OAAO,EAAE;QAAK,CAAC,GAAGU,MACnE,CAAC;QACD/C,kBAAkB,CAAC,gBAAgB,EAAE6C,cAAc,CAAC;QACpD,OAAOF,UAAU;MACnB;MACAL,OAAO,CAACxB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDkC,MAAM,EAAE,MAAOZ,EAAE,IAAK;IACpB,IAAI;MACF,MAAMxB,QAAQ,GAAG,MAAMT,GAAG,CAAC6C,MAAM,CAAC,YAAYZ,EAAE,EAAE,CAAC;MACnD,OAAOxB,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACoB,SAAS,CAACC,MAAM,EAAE;QACrB,MAAMP,cAAc,GAAG3B,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,EAAE;QAClE,MAAM4C,cAAc,GAAGjB,cAAc,CAACqB,MAAM,CAACF,MAAM,IAAIA,MAAM,CAACX,EAAE,KAAKA,EAAE,CAAC;QACxEpC,kBAAkB,CAAC,gBAAgB,EAAE6C,cAAc,CAAC;QACpD,OAAO;UAAEK,OAAO,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAK,CAAC;MACzC;MACAb,OAAO,CAACxB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDsC,kBAAkB,EAAE,MAAAA,CAAA,KAAY;IAC9B,IAAIlB,SAAS,CAACC,MAAM,EAAE;MACpB,MAAMP,cAAc,GAAG3B,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,EAAE;MAElE,KAAK,MAAM8C,MAAM,IAAInB,cAAc,EAAE;QACnC,IAAI;UACF,IAAImB,MAAM,CAACV,OAAO,EAAE;YAClB,MAAMN,cAAc,CAAC3B,MAAM,CAAC2C,MAAM,CAAC;UACrC;QACF,CAAC,CAAC,OAAOjC,KAAK,EAAE;UACdwB,OAAO,CAACxB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF;MAEAZ,iBAAiB,CAAC,gBAAgB,CAAC;IACrC;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMmD,eAAe,GAAG;EAC7BjD,MAAM,EAAE,MAAOkD,WAAW,IAAK;IAC7B,IAAI;MACF,MAAM1C,QAAQ,GAAG,MAAMT,GAAG,CAAC8B,IAAI,CAAC,WAAW,EAAEqB,WAAW,CAAC;MACzD,OAAO1C,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACoB,SAAS,CAACC,MAAM,EAAE;QACrB,MAAMT,eAAe,GAAGzB,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,EAAE;QACpEyB,eAAe,CAACC,IAAI,CAAC;UAAE,GAAG2B,WAAW;UAAElB,EAAE,EAAEb,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEa,OAAO,EAAE;QAAK,CAAC,CAAC;QACvErC,kBAAkB,CAAC,iBAAiB,EAAE0B,eAAe,CAAC;QACtD,OAAO4B,WAAW;MACpB;MACAhB,OAAO,CAACxB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDyB,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACF,MAAM3B,QAAQ,GAAG,MAAMT,GAAG,CAACqC,GAAG,CAAC,WAAW,CAAC;MAC3C,MAAMC,UAAU,GAAG7B,QAAQ,CAACO,IAAI;MAEhC,IAAI,CAACe,SAAS,CAACC,MAAM,EAAE;QACrB,MAAMT,eAAe,GAAGzB,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,EAAE;QACpE,OAAO,CAAC,GAAGwC,UAAU,EAAE,GAAGf,eAAe,CAAC;MAC5C;MAEA,OAAOe,UAAU;IACnB,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACd,IAAI,CAACoB,SAAS,CAACC,MAAM,EAAE;QACrB,OAAOlC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,EAAE;MACrD;MACAqC,OAAO,CAACxB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAED4B,MAAM,EAAE,MAAAA,CAAON,EAAE,EAAEO,UAAU,KAAK;IAChC,IAAI;MACF,MAAM/B,QAAQ,GAAG,MAAMT,GAAG,CAACyC,GAAG,CAAC,aAAaR,EAAE,EAAE,EAAEO,UAAU,CAAC;MAC7D,OAAO/B,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACoB,SAAS,CAACC,MAAM,EAAE;QACrB,MAAMT,eAAe,GAAGzB,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,EAAE;QACpE,MAAMsD,eAAe,GAAG7B,eAAe,CAACoB,GAAG,CAACU,OAAO,IACjDA,OAAO,CAACpB,EAAE,KAAKA,EAAE,GAAG;UAAE,GAAGoB,OAAO;UAAE,GAAGb,UAAU;UAAEN,OAAO,EAAE;QAAK,CAAC,GAAGmB,OACrE,CAAC;QACDxD,kBAAkB,CAAC,iBAAiB,EAAEuD,eAAe,CAAC;QACtD,OAAOZ,UAAU;MACnB;MACAL,OAAO,CAACxB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDkC,MAAM,EAAE,MAAOZ,EAAE,IAAK;IACpB,IAAI;MACF,MAAMxB,QAAQ,GAAG,MAAMT,GAAG,CAAC6C,MAAM,CAAC,aAAaZ,EAAE,EAAE,CAAC;MACpD,OAAOxB,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAI,CAACoB,SAAS,CAACC,MAAM,EAAE;QACrB,MAAMT,eAAe,GAAGzB,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,EAAE;QACpE,MAAMsD,eAAe,GAAG7B,eAAe,CAACuB,MAAM,CAACO,OAAO,IAAIA,OAAO,CAACpB,EAAE,KAAKA,EAAE,CAAC;QAC5EpC,kBAAkB,CAAC,iBAAiB,EAAEuD,eAAe,CAAC;QACtD,OAAO;UAAEL,OAAO,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAK,CAAC;MACzC;MACAb,OAAO,CAACxB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED2C,mBAAmB,EAAE,MAAAA,CAAA,KAAY;IAC/B,IAAIvB,SAAS,CAACC,MAAM,EAAE;MACpB,MAAMT,eAAe,GAAGzB,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,EAAE;MAEpE,KAAK,MAAMuD,OAAO,IAAI9B,eAAe,EAAE;QACrC,IAAI;UACF,IAAI8B,OAAO,CAACnB,OAAO,EAAE;YACnB,MAAMgB,eAAe,CAACjD,MAAM,CAACoD,OAAO,CAAC;UACvC;QACF,CAAC,CAAC,OAAO1C,KAAK,EAAE;UACdwB,OAAO,CAACxB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACpD;MACF;MAEAZ,iBAAiB,CAAC,iBAAiB,CAAC;IACtC;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMwD,eAAe,GAAG;EAC7BC,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAM/C,QAAQ,GAAG,MAAMT,GAAG,CAACqC,GAAG,CAAC,2BAA2B,CAAC;MAC3D,OAAO5B,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdwB,OAAO,CAACxB,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,MAAMA,KAAK;IACb;EACF,CAAC;EAED8C,oBAAoB,EAAE,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMhD,QAAQ,GAAG,MAAMT,GAAG,CAACqC,GAAG,CAAC,gCAAgC,CAAC;MAChE,OAAO5B,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdwB,OAAO,CAACxB,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAChE,MAAMA,KAAK;IACb;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAM+C,WAAW,GAAG;EACzBC,cAAc,EAAGC,MAAM,IAAK;IAC1B,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MACpCC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE;IACZ,CAAC,CAAC,CAACC,MAAM,CAACL,MAAM,CAAC;EACnB,CAAC;EAEDM,QAAQ,EAAEA,CAAA,KAAMnC,SAAS,CAACC,MAAM;EAEhCmC,OAAO,EAAE,MAAAA,CAAA,KAAY;IACnB,MAAMzC,OAAO,CAAC0C,GAAG,CAAC,CAChBlB,eAAe,CAACI,mBAAmB,CAAC,CAAC,EACrC1B,cAAc,CAACqB,kBAAkB,CAAC,CAAC,CACpC,CAAC;EACJ;AACF,CAAC;AAED,eAAejD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}