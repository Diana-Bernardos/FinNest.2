{"ast":null,"code":"var _jsxFileName = \"/Users/diana/Desktop/FinNest.2/frontend/src/components/AIFinancialAnalysis.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIFinancialAnalysis = ({\n  expenses,\n  savings\n}) => {\n  _s();\n  const [aiInsights, setAiInsights] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [rawResponse, setRawResponse] = useState(null); // Para depuración\n\n  const fetchAIAnalysis = async () => {\n    if (expenses.length === 0 || savings.length === 0) {\n      setError('No hay suficientes datos para realizar el análisis.');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    setAiInsights(null);\n    setRawResponse(null);\n    try {\n      const response = await axios.post('http://localhost:11434/api/generate', {\n        model: \"llama3.2:3b-instruct-q8_0\",\n        prompt: `Actúa como un analista financiero experto y proporciona un análisis en formato JSON.\n\n        Gastos: ${JSON.stringify(expenses, null, 2)}\n        Ahorros: ${JSON.stringify(savings, null, 2)}\n\n        Responde exclusivamente en este formato JSON sin añadir texto antes o después:\n        {\n          \"gastosTotales\": número,\n          \"ahorrosTotales\": número,\n          \"analisisGastos\": \"string\",\n          \"progresoAhorros\": \"string\",\n          \"recomendaciones\": [\"string\", \"string\", \"string\"],\n          \"categoriasMayorGasto\": [\"string\", \"string\", \"string\"],\n          \"potencialAhorro\": número\n        }`,\n        stream: false\n      });\n      if (response.status !== 200 || !response.data || !response.data.response) {\n        throw new Error('Respuesta inválida de la API.');\n      }\n      const aiText = response.data.response.trim();\n      console.log(\"Respuesta de la IA:\", aiText);\n      setRawResponse(aiText);\n      try {\n        // Limpiar la respuesta de la IA eliminando cualquier formato Markdown o caracteres adicionales\n        const cleanJson = aiText.replace(/```json|```/g, '') // Eliminar etiquetas de código Markdown\n        .trim(); // Eliminar espacios en blanco al inicio y final\n\n        let jsonData;\n        try {\n          // Intentar parsear el JSON limpio\n          jsonData = JSON.parse(cleanJson);\n        } catch (parseError) {\n          // Si el JSON no es válido, intentar corregirlo\n          console.warn(\"JSON inválido detectado. Intentando corregir...\", parseError);\n\n          // Verificar si falta una llave de cierre\n          if (!cleanJson.endsWith('}')) {\n            const fixedJson = `${cleanJson}}`;\n            try {\n              jsonData = JSON.parse(fixedJson);\n              console.warn(\"JSON corregido exitosamente.\");\n            } catch (fixedParseError) {\n              throw new Error(`No se pudo corregir el JSON: ${fixedParseError.message}`);\n            }\n          } else {\n            throw new Error(\"El JSON no pudo ser corregido automáticamente.\");\n          }\n        }\n\n        // Validar que los datos sean un objeto JSON válido\n        if (typeof jsonData !== 'object' || jsonData === null) {\n          throw new Error(\"La respuesta no contiene un objeto JSON válido.\");\n        }\n\n        // Procesar los datos JSON según sea necesario\n        setAiInsights(jsonData);\n\n        // Si no quieres mostrar el JSON directamente, extrae solo los datos relevantes\n        const relevantData = extractRelevantData(jsonData); // Función personalizada para extraer datos específicos\n        setDisplayData(relevantData); // Actualiza la interfaz con los datos relevantes\n      } catch (jsonError) {\n        // Capturar errores relacionados con el JSON\n        console.error(\"Error al procesar el JSON:\", jsonError);\n        setError(`Error al procesar el análisis de la IA: ${jsonError.message}`);\n\n        // Capturar otros errores generales\n        console.error(\"Error al obtener análisis de la IA:\", error);\n        setError(error.message);\n      } finally {\n        // Finalizar carga independientemente del resultado\n        setIsLoading(false);\n      }\n\n      // Función para extraer datos relevantes del JSON\n      function extractRelevantData(jsonData) {\n        // Ejemplo: Extraer campos específicos del JSON\n        const {\n          insights,\n          summary,\n          recommendations\n        } = jsonData;\n        return {\n          insights: insights || \"Sin información disponible\",\n          summary: summary || \"Sin resumen disponible\",\n          recommendations: recommendations || \"Sin recomendaciones disponibles\"\n        };\n      }\n    } catch (jsonError) {\n      // Capturar errores relacionados con el JSON\n      console.error(\"Error al procesar el JSON:\", jsonError);\n      setError(`Error al procesar el análisis de la IA: ${jsonError.message}`);\n\n      // Capturar otros errores generales\n      console.error(\"Error al obtener análisis de la IA:\", error);\n      setError(error.message);\n    } finally {\n      // Finalizar carga independientemente del resultado\n      setIsLoading(false);\n    }\n\n    // Función para extraer datos relevantes del JSON\n    function extractRelevantData(jsonData) {\n      // Ejemplo: Extraer campos específicos del JSON\n      const {\n        insights,\n        summary,\n        recommendations\n      } = jsonData;\n      return {\n        insights: insights || \"Sin información disponible\",\n        summary: summary || \"Sin resumen disponible\",\n        recommendations: recommendations || \"Sin recomendaciones disponibles\"\n      };\n    }\n    ;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"An\\xE1lisis Financiero con IA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchAIAnalysis,\n        disabled: isLoading,\n        children: isLoading ? \"Analizando...\" : \"Obtener Análisis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), rawResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Respuesta sin procesar:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: rawResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Resultados del An\\xE1lisis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Gastos Totales:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 14\n          }, this), \" $\", aiInsights.gastosTotales]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ahorros Totales:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 14\n          }, this), \" $\", aiInsights.ahorrosTotales]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"An\\xE1lisis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 14\n          }, this), \" \", aiInsights.analisisGastos]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Progreso en Ahorros:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 14\n          }, this), \" \", aiInsights.progresoAhorros]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recomendaciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: aiInsights.recomendaciones.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Categor\\xEDas de Mayor Gasto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: aiInsights.categoriasMayorGasto.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Potencial de Ahorro:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 14\n          }, this), \" $\", aiInsights.potencialAhorro]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, this);\n  };\n};\n_s(AIFinancialAnalysis, \"Y7ggDTi2l65TmBlIKVEHlgGtOSo=\");\n_c = AIFinancialAnalysis;\nexport default AIFinancialAnalysis;\nvar _c;\n$RefreshReg$(_c, \"AIFinancialAnalysis\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AIFinancialAnalysis","expenses","savings","_s","aiInsights","setAiInsights","isLoading","setIsLoading","error","setError","rawResponse","setRawResponse","fetchAIAnalysis","length","response","post","model","prompt","JSON","stringify","stream","status","data","Error","aiText","trim","console","log","cleanJson","replace","jsonData","parse","parseError","warn","endsWith","fixedJson","fixedParseError","message","relevantData","extractRelevantData","setDisplayData","jsonError","insights","summary","recommendations","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","gastosTotales","ahorrosTotales","analisisGastos","progresoAhorros","recomendaciones","map","item","index","categoriasMayorGasto","potencialAhorro","_c","$RefreshReg$"],"sources":["/Users/diana/Desktop/FinNest.2/frontend/src/components/AIFinancialAnalysis.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AIFinancialAnalysis = ({ expenses, savings }) => {\n  const [aiInsights, setAiInsights] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [rawResponse, setRawResponse] = useState(null); // Para depuración\n\n  const fetchAIAnalysis = async () => {\n    if (expenses.length === 0 || savings.length === 0) {\n      setError('No hay suficientes datos para realizar el análisis.');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setAiInsights(null);\n    setRawResponse(null);\n\n    try {\n      const response = await axios.post('http://localhost:11434/api/generate', {\n        model: \"llama3.2:3b-instruct-q8_0\",\n        prompt: `Actúa como un analista financiero experto y proporciona un análisis en formato JSON.\n\n        Gastos: ${JSON.stringify(expenses, null, 2)}\n        Ahorros: ${JSON.stringify(savings, null, 2)}\n\n        Responde exclusivamente en este formato JSON sin añadir texto antes o después:\n        {\n          \"gastosTotales\": número,\n          \"ahorrosTotales\": número,\n          \"analisisGastos\": \"string\",\n          \"progresoAhorros\": \"string\",\n          \"recomendaciones\": [\"string\", \"string\", \"string\"],\n          \"categoriasMayorGasto\": [\"string\", \"string\", \"string\"],\n          \"potencialAhorro\": número\n        }`,\n        stream: false,\n      });\n\n      if (response.status !== 200 || !response.data || !response.data.response) {\n        throw new Error('Respuesta inválida de la API.');\n      }\n\n      const aiText = response.data.response.trim();\n      console.log(\"Respuesta de la IA:\", aiText);\n      setRawResponse(aiText);\n\n      try {\n        // Limpiar la respuesta de la IA eliminando cualquier formato Markdown o caracteres adicionales\n        const cleanJson = aiText\n          .replace(/```json|```/g, '') // Eliminar etiquetas de código Markdown\n          .trim(); // Eliminar espacios en blanco al inicio y final\n      \n        let jsonData;\n      \n        try {\n          // Intentar parsear el JSON limpio\n          jsonData = JSON.parse(cleanJson);\n        } catch (parseError) {\n          // Si el JSON no es válido, intentar corregirlo\n          console.warn(\"JSON inválido detectado. Intentando corregir...\", parseError);\n      \n          // Verificar si falta una llave de cierre\n          if (!cleanJson.endsWith('}')) {\n            const fixedJson = `${cleanJson}}`;\n            try {\n              jsonData = JSON.parse(fixedJson);\n              console.warn(\"JSON corregido exitosamente.\");\n            } catch (fixedParseError) {\n              throw new Error(`No se pudo corregir el JSON: ${fixedParseError.message}`);\n            }\n          } else {\n            throw new Error(\"El JSON no pudo ser corregido automáticamente.\");\n          }\n        }\n      \n        // Validar que los datos sean un objeto JSON válido\n        if (typeof jsonData !== 'object' || jsonData === null) {\n          throw new Error(\"La respuesta no contiene un objeto JSON válido.\");\n        }\n      \n        // Procesar los datos JSON según sea necesario\n        setAiInsights(jsonData);\n      \n        // Si no quieres mostrar el JSON directamente, extrae solo los datos relevantes\n        const relevantData = extractRelevantData(jsonData); // Función personalizada para extraer datos específicos\n        setDisplayData(relevantData); // Actualiza la interfaz con los datos relevantes\n      \n      } catch (jsonError) {\n        // Capturar errores relacionados con el JSON\n        console.error(\"Error al procesar el JSON:\", jsonError);\n        setError(`Error al procesar el análisis de la IA: ${jsonError.message}`);\n      \n        // Capturar otros errores generales\n        console.error(\"Error al obtener análisis de la IA:\", error);\n        setError(error.message);\n      } finally {\n        // Finalizar carga independientemente del resultado\n        setIsLoading(false);\n      }\n      \n      // Función para extraer datos relevantes del JSON\n      function extractRelevantData(jsonData) {\n        // Ejemplo: Extraer campos específicos del JSON\n        const { insights, summary, recommendations } = jsonData;\n        return {\n          insights: insights || \"Sin información disponible\",\n          summary: summary || \"Sin resumen disponible\",\n          recommendations: recommendations || \"Sin recomendaciones disponibles\"\n        };\n      }\n\n} catch (jsonError) {\n  // Capturar errores relacionados con el JSON\n  console.error(\"Error al procesar el JSON:\", jsonError);\n  setError(`Error al procesar el análisis de la IA: ${jsonError.message}`);\n\n  // Capturar otros errores generales\n  console.error(\"Error al obtener análisis de la IA:\", error);\n  setError(error.message);\n} finally {\n  // Finalizar carga independientemente del resultado\n  setIsLoading(false);\n}\n\n// Función para extraer datos relevantes del JSON\nfunction extractRelevantData(jsonData) {\n  // Ejemplo: Extraer campos específicos del JSON\n  const { insights, summary, recommendations } = jsonData;\n  return {\n    insights: insights || \"Sin información disponible\",\n    summary: summary || \"Sin resumen disponible\",\n    recommendations: recommendations || \"Sin recomendaciones disponibles\"\n  };\n  };\n\n  return (\n    <div>\n      <h2>Análisis Financiero con IA</h2>\n      <button onClick={fetchAIAnalysis} disabled={isLoading}>\n        {isLoading ? \"Analizando...\" : \"Obtener Análisis\"}\n      </button>\n\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n\n      {rawResponse && (\n        <div>\n          <h3>Respuesta sin procesar:</h3>\n          <pre>{rawResponse}</pre>\n        </div>\n      )}\n\n      {aiInsights && (\n        <div>\n          <h3>Resultados del Análisis</h3>\n          <p><strong>Gastos Totales:</strong> ${aiInsights.gastosTotales}</p>\n          <p><strong>Ahorros Totales:</strong> ${aiInsights.ahorrosTotales}</p>\n          <p><strong>Análisis:</strong> {aiInsights.analisisGastos}</p>\n          <p><strong>Progreso en Ahorros:</strong> {aiInsights.progresoAhorros}</p>\n\n          <h4>Recomendaciones</h4>\n          <ul>\n            {aiInsights.recomendaciones.map((item, index) => (\n              <li key={index}>{item}</li>\n            ))}\n          </ul>\n\n          <h4>Categorías de Mayor Gasto</h4>\n          <ul>\n            {aiInsights.categoriasMayorGasto.map((item, index) => (\n              <li key={index}>{item}</li>\n            ))}\n          </ul>\n\n          <p><strong>Potencial de Ahorro:</strong> ${aiInsights.potencialAhorro}</p>\n        </div>\n      )}\n    </div>\n  );\n};};\n\nexport default AIFinancialAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}