{"ast":null,"code":"var _jsxFileName = \"/Users/diana/Desktop/FinNest.2/frontend/src/components/AIFinancialAnalysis.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIFinancialAnalysis = ({\n  expenses,\n  savings\n}) => {\n  _s();\n  const [aiInsights, setAiInsights] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [rawResponse, setRawResponse] = useState(null); // Para depuración\n\n  const fetchAIAnalysis = async () => {\n    if (expenses.length === 0 || savings.length === 0) {\n      setError('No hay suficientes datos para realizar el análisis.');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    setAiInsights(null);\n    setRawResponse(null);\n    try {\n      const response = await axios.post('http://localhost:11434/api/generate', {\n        model: \"llama3.2:3b-instruct-q8_0\",\n        prompt: `Actúa como un analista financiero experto y proporciona un análisis en formato JSON.\n\n        Gastos: ${JSON.stringify(expenses, null, 2)}\n        Ahorros: ${JSON.stringify(savings, null, 2)}\n\n        Responde exclusivamente en este formato JSON sin añadir texto antes o después:\n        {\n          \"gastosTotales\": número,\n          \"ahorrosTotales\": número,\n          \"analisisGastos\": \"string\",\n          \"progresoAhorros\": \"string\",\n          \"recomendaciones\": [\"string\", \"string\", \"string\"],\n          \"categoriasMayorGasto\": [\"string\", \"string\", \"string\"],\n          \"potencialAhorro\": número\n        }`,\n        stream: false\n      });\n      if (response.status !== 200 || !response.data || !response.data.response) {\n        throw new Error('Respuesta inválida de la API.');\n      }\n      const aiText = response.data.response.trim();\n      console.log(\"Respuesta de la IA:\", aiText);\n      setRawResponse(aiText);\n      try {\n        // Eliminar los delimitadores Markdown de la respuesta\n        const cleanJson = aiText.replace(/```json|```/g, '') // Eliminar las etiquetas de código Markdown\n        .trim(); // Eliminar espacios y saltos innecesarios\n\n        // Parsear el JSON limpio\n        const jsonData = JSON.parse(cleanJson);\n        setAiInsights(jsonData);\n      } catch (jsonError) {\n        throw new Error(`Error al parsear JSON: ${jsonError.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error al obtener análisis de la IA:\", error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"An\\xE1lisis Financiero con IA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchAIAnalysis,\n      disabled: isLoading,\n      children: isLoading ? \"Analizando...\" : \"Obtener Análisis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), rawResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Respuesta sin procesar:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: rawResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resultados del An\\xE1lisis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Gastos Totales:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 14\n        }, this), \" $\", aiInsights.gastosTotales]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ahorros Totales:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 14\n        }, this), \" $\", aiInsights.ahorrosTotales]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"An\\xE1lisis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }, this), \" \", aiInsights.analisisGastos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Progreso en Ahorros:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 14\n        }, this), \" \", aiInsights.progresoAhorros]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Recomendaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: aiInsights.recomendaciones.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Categor\\xEDas de Mayor Gasto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: aiInsights.categoriasMayorGasto.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Potencial de Ahorro:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 14\n        }, this), \" $\", aiInsights.potencialAhorro]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AIFinancialAnalysis, \"Y7ggDTi2l65TmBlIKVEHlgGtOSo=\");\n_c = AIFinancialAnalysis;\nexport default AIFinancialAnalysis;\nvar _c;\n$RefreshReg$(_c, \"AIFinancialAnalysis\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AIFinancialAnalysis","expenses","savings","_s","aiInsights","setAiInsights","isLoading","setIsLoading","error","setError","rawResponse","setRawResponse","fetchAIAnalysis","length","response","post","model","prompt","JSON","stringify","stream","status","data","Error","aiText","trim","console","log","cleanJson","replace","jsonData","parse","jsonError","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","gastosTotales","ahorrosTotales","analisisGastos","progresoAhorros","recomendaciones","map","item","index","categoriasMayorGasto","potencialAhorro","_c","$RefreshReg$"],"sources":["/Users/diana/Desktop/FinNest.2/frontend/src/components/AIFinancialAnalysis.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AIFinancialAnalysis = ({ expenses, savings }) => {\n  const [aiInsights, setAiInsights] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [rawResponse, setRawResponse] = useState(null); // Para depuración\n\n  const fetchAIAnalysis = async () => {\n    if (expenses.length === 0 || savings.length === 0) {\n      setError('No hay suficientes datos para realizar el análisis.');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setAiInsights(null);\n    setRawResponse(null);\n\n    try {\n      const response = await axios.post('http://localhost:11434/api/generate', {\n        model: \"llama3.2:3b-instruct-q8_0\",\n        prompt: `Actúa como un analista financiero experto y proporciona un análisis en formato JSON.\n\n        Gastos: ${JSON.stringify(expenses, null, 2)}\n        Ahorros: ${JSON.stringify(savings, null, 2)}\n\n        Responde exclusivamente en este formato JSON sin añadir texto antes o después:\n        {\n          \"gastosTotales\": número,\n          \"ahorrosTotales\": número,\n          \"analisisGastos\": \"string\",\n          \"progresoAhorros\": \"string\",\n          \"recomendaciones\": [\"string\", \"string\", \"string\"],\n          \"categoriasMayorGasto\": [\"string\", \"string\", \"string\"],\n          \"potencialAhorro\": número\n        }`,\n        stream: false,\n      });\n\n      if (response.status !== 200 || !response.data || !response.data.response) {\n        throw new Error('Respuesta inválida de la API.');\n      }\n\n      const aiText = response.data.response.trim();\n      console.log(\"Respuesta de la IA:\", aiText);\n      setRawResponse(aiText);\n\n      try {\n        // Eliminar los delimitadores Markdown de la respuesta\n        const cleanJson = aiText\n          .replace(/```json|```/g, '') // Eliminar las etiquetas de código Markdown\n          .trim(); // Eliminar espacios y saltos innecesarios\n\n        // Parsear el JSON limpio\n        const jsonData = JSON.parse(cleanJson);\n        setAiInsights(jsonData);\n      } catch (jsonError) {\n        throw new Error(`Error al parsear JSON: ${jsonError.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error al obtener análisis de la IA:\", error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Análisis Financiero con IA</h2>\n      <button onClick={fetchAIAnalysis} disabled={isLoading}>\n        {isLoading ? \"Analizando...\" : \"Obtener Análisis\"}\n      </button>\n\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n\n      {rawResponse && (\n        <div>\n          <h3>Respuesta sin procesar:</h3>\n          <pre>{rawResponse}</pre>\n        </div>\n      )}\n\n      {aiInsights && (\n        <div>\n          <h3>Resultados del Análisis</h3>\n          <p><strong>Gastos Totales:</strong> ${aiInsights.gastosTotales}</p>\n          <p><strong>Ahorros Totales:</strong> ${aiInsights.ahorrosTotales}</p>\n          <p><strong>Análisis:</strong> {aiInsights.analisisGastos}</p>\n          <p><strong>Progreso en Ahorros:</strong> {aiInsights.progresoAhorros}</p>\n\n          <h4>Recomendaciones</h4>\n          <ul>\n            {aiInsights.recomendaciones.map((item, index) => (\n              <li key={index}>{item}</li>\n            ))}\n          </ul>\n\n          <h4>Categorías de Mayor Gasto</h4>\n          <ul>\n            {aiInsights.categoriasMayorGasto.map((item, index) => (\n              <li key={index}>{item}</li>\n            ))}\n          </ul>\n\n          <p><strong>Potencial de Ahorro:</strong> ${aiInsights.potencialAhorro}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AIFinancialAnalysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}