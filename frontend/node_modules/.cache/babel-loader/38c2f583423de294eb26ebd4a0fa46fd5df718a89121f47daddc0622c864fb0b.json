{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\n\n// Configuración base de axios\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Servicios de Ahorros\nexport const savingsService = {\n  // Obtener todos los ahorros\n  create: async savingData => {\n    try {\n      const response = await axios.post('/', savingData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      console.error('Error en la solicitud:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  },\n  getAll: async () => {\n    try {\n      const response = await api.get('/savings');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo ahorros:', error);\n      throw error;\n    }\n  },\n  // Actualizar ahorro\n  update: async (id, updateData) => {\n    try {\n      // Transform update data to match backend expectations\n      const transformedData = {\n        goalName: updateData.goalName,\n        targetAmount: updateData.targetAmount,\n        currentAmount: updateData.currentAmount,\n        targetDate: updateData.targetDate\n      };\n      const response = await api.put(`/savings/${id}`, transformedData);\n      return response.data;\n    } catch (error) {\n      console.error('Error actualizando ahorro:', error);\n      throw error;\n    }\n  },\n  // Eliminar ahorro\n  delete: async id => {\n    try {\n      const response = await api.delete(`/savings/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error eliminando ahorro:', error);\n      throw error;\n    }\n  }\n};\n\n// Servicios de Gastos\nexport const expensesService = {\n  // Obtener todos los gastos\n  create: async expenseData => {\n    try {\n      const response = await api.post('/expenses', expenseData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creando gasto:', error);\n      throw error;\n    }\n  },\n  getAll: async () => {\n    try {\n      const response = await api.get('/expenses');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo gastos:', error);\n      throw error;\n    }\n  },\n  // Actualizar gasto\n  update: async (id, updateData) => {\n    try {\n      const response = await api.put(`/expenses/${id}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Error actualizando gasto:', error);\n      throw error;\n    }\n  },\n  // Eliminar gasto\n  delete: async id => {\n    try {\n      const response = await api.delete(`/expenses/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error eliminando gasto:', error);\n      throw error;\n    }\n  }\n};\n\n// Servicios de Análisis\nexport const analysisService = {\n  // Obtener resumen mensual\n  getMonthlySummary: async () => {\n    try {\n      const response = await api.get('/analysis/monthly-summary');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo resumen mensual:', error);\n      throw error;\n    }\n  },\n  // Obtener análisis por categoría\n  getCategoryBreakdown: async () => {\n    try {\n      const response = await api.get('/expenses/analysis/by-category');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo análisis por categoría:', error);\n      throw error;\n    }\n  }\n};\n\n// Utilidades\nexport const utilService = {\n  // Formateo de moneda\n  formatCurrency: amount => {\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: 'CLP'\n    }).format(amount);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","savingsService","savingData","response","post","data","error","_error$response","console","message","getAll","get","update","id","updateData","transformedData","goalName","targetAmount","currentAmount","targetDate","put","delete","expensesService","expenseData","analysisService","getMonthlySummary","getCategoryBreakdown","utilService","formatCurrency","amount","Intl","NumberFormat","style","currency","format"],"sources":["/Users/diana/Desktop/FinNest.2/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\n\n// Configuración base de axios\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Servicios de Ahorros\nexport const savingsService = {\n  // Obtener todos los ahorros\n  create: async (savingData) => {\n    try {\n      const response = await axios.post('/', savingData, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error en la solicitud:', error.response?.data || error.message);\n      throw error;\n    }\n  },\n  getAll: async () => {\n    try {\n      const response = await api.get('/savings');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo ahorros:', error);\n      throw error;\n    }\n  },\n\n  // Actualizar ahorro\n  update: async (id, updateData) => {\n    try {\n      // Transform update data to match backend expectations\n      const transformedData = {\n        goalName: updateData.goalName,\n        targetAmount: updateData.targetAmount,\n        currentAmount: updateData.currentAmount,\n        targetDate: updateData.targetDate\n      };\n\n      const response = await api.put(`/savings/${id}`, transformedData);\n      return response.data;\n    } catch (error) {\n      console.error('Error actualizando ahorro:', error);\n      throw error;\n    }\n  },\n\n  // Eliminar ahorro\n  delete: async (id) => {\n    try {\n      const response = await api.delete(`/savings/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error eliminando ahorro:', error);\n      throw error;\n    }\n  }\n};\n\n// Servicios de Gastos\nexport const expensesService = {\n  // Obtener todos los gastos\n  create: async (expenseData) => {\n    try {\n      const response = await api.post('/expenses', expenseData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creando gasto:', error);\n      throw error;\n    }\n  },\n  getAll: async () => {\n    try {\n      const response = await api.get('/expenses');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo gastos:', error);\n      throw error;\n    }\n  },\n\n  // Actualizar gasto\n  update: async (id, updateData) => {\n    try {\n      const response = await api.put(`/expenses/${id}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Error actualizando gasto:', error);\n      throw error;\n    }\n  },\n\n  // Eliminar gasto\n  delete: async (id) => {\n    try {\n      const response = await api.delete(`/expenses/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error eliminando gasto:', error);\n      throw error;\n    }\n  }\n};\n\n// Servicios de Análisis\nexport const analysisService = {\n  // Obtener resumen mensual\n  getMonthlySummary: async () => {\n    try {\n      const response = await api.get('/analysis/monthly-summary');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo resumen mensual:', error);\n      throw error;\n    }\n  },\n\n  // Obtener análisis por categoría\n  getCategoryBreakdown: async () => {\n    try {\n      const response = await api.get('/expenses/analysis/by-category');\n      return response.data;\n    } catch (error) {\n      console.error('Error obteniendo análisis por categoría:', error);\n      throw error;\n    }\n  }\n};\n\n// Utilidades\nexport const utilService = {\n  // Formateo de moneda\n  formatCurrency: (amount) => {\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: 'CLP'\n    }).format(amount);\n  }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}